// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// ListAddOnPlansAddOnPlansAddOnPlanConnection includes the requested fields of the GraphQL type AddOnPlanConnection.
// The GraphQL type's documentation follows.
//
// The connection type for AddOnPlan.
type ListAddOnPlansAddOnPlansAddOnPlanConnection struct {
	// A list of nodes.
	Nodes []ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan `json:"nodes"`
}

// GetNodes returns ListAddOnPlansAddOnPlansAddOnPlanConnection.Nodes, and is useful for accessing the field via an interface.
func (v *ListAddOnPlansAddOnPlansAddOnPlanConnection) GetNodes() []ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan {
	return v.Nodes
}

// ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan includes the requested fields of the GraphQL type AddOnPlan.
type ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan struct {
	Id            string `json:"id"`
	DisplayName   string `json:"displayName"`
	MaxDataSize   string `json:"maxDataSize"`
	PricePerMonth int    `json:"pricePerMonth"`
}

// GetId returns ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan.Id, and is useful for accessing the field via an interface.
func (v *ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan) GetId() string { return v.Id }

// GetDisplayName returns ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan.DisplayName, and is useful for accessing the field via an interface.
func (v *ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan) GetDisplayName() string {
	return v.DisplayName
}

// GetMaxDataSize returns ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan.MaxDataSize, and is useful for accessing the field via an interface.
func (v *ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan) GetMaxDataSize() string {
	return v.MaxDataSize
}

// GetPricePerMonth returns ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan.PricePerMonth, and is useful for accessing the field via an interface.
func (v *ListAddOnPlansAddOnPlansAddOnPlanConnectionNodesAddOnPlan) GetPricePerMonth() int {
	return v.PricePerMonth
}

// ListAddOnPlansResponse is returned by ListAddOnPlans on success.
type ListAddOnPlansResponse struct {
	// List add-on service plans
	AddOnPlans ListAddOnPlansAddOnPlansAddOnPlanConnection `json:"addOnPlans"`
}

// GetAddOnPlans returns ListAddOnPlansResponse.AddOnPlans, and is useful for accessing the field via an interface.
func (v *ListAddOnPlansResponse) GetAddOnPlans() ListAddOnPlansAddOnPlansAddOnPlanConnection {
	return v.AddOnPlans
}

// ProvisionAddOnProvisionAddOnProvisionAddOnPayload includes the requested fields of the GraphQL type ProvisionAddOnPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of ProvisionAddOn
type ProvisionAddOnProvisionAddOnProvisionAddOnPayload struct {
	AddOn ProvisionAddOnProvisionAddOnProvisionAddOnPayloadAddOn `json:"addOn"`
}

// GetAddOn returns ProvisionAddOnProvisionAddOnProvisionAddOnPayload.AddOn, and is useful for accessing the field via an interface.
func (v *ProvisionAddOnProvisionAddOnProvisionAddOnPayload) GetAddOn() ProvisionAddOnProvisionAddOnProvisionAddOnPayloadAddOn {
	return v.AddOn
}

// ProvisionAddOnProvisionAddOnProvisionAddOnPayloadAddOn includes the requested fields of the GraphQL type AddOn.
type ProvisionAddOnProvisionAddOnProvisionAddOnPayloadAddOn struct {
	Id string `json:"id"`
	// Public URL for this service
	PublicUrl string `json:"publicUrl"`
}

// GetId returns ProvisionAddOnProvisionAddOnProvisionAddOnPayloadAddOn.Id, and is useful for accessing the field via an interface.
func (v *ProvisionAddOnProvisionAddOnProvisionAddOnPayloadAddOn) GetId() string { return v.Id }

// GetPublicUrl returns ProvisionAddOnProvisionAddOnProvisionAddOnPayloadAddOn.PublicUrl, and is useful for accessing the field via an interface.
func (v *ProvisionAddOnProvisionAddOnProvisionAddOnPayloadAddOn) GetPublicUrl() string {
	return v.PublicUrl
}

// ProvisionAddOnResponse is returned by ProvisionAddOn on success.
type ProvisionAddOnResponse struct {
	ProvisionAddOn ProvisionAddOnProvisionAddOnProvisionAddOnPayload `json:"provisionAddOn"`
}

// GetProvisionAddOn returns ProvisionAddOnResponse.ProvisionAddOn, and is useful for accessing the field via an interface.
func (v *ProvisionAddOnResponse) GetProvisionAddOn() ProvisionAddOnProvisionAddOnProvisionAddOnPayload {
	return v.ProvisionAddOn
}

// __ProvisionAddOnInput is used internally by genqlient
type __ProvisionAddOnInput struct {
	OrganizationId string `json:"organizationId"`
	Region         string `json:"region"`
	PlanId         string `json:"planId"`
}

// GetOrganizationId returns __ProvisionAddOnInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__ProvisionAddOnInput) GetOrganizationId() string { return v.OrganizationId }

// GetRegion returns __ProvisionAddOnInput.Region, and is useful for accessing the field via an interface.
func (v *__ProvisionAddOnInput) GetRegion() string { return v.Region }

// GetPlanId returns __ProvisionAddOnInput.PlanId, and is useful for accessing the field via an interface.
func (v *__ProvisionAddOnInput) GetPlanId() string { return v.PlanId }

func ListAddOnPlans(
	ctx context.Context,
	client graphql.Client,
) (*ListAddOnPlansResponse, error) {
	req := &graphql.Request{
		OpName: "ListAddOnPlans",
		Query: `
query ListAddOnPlans {
	addOnPlans {
		nodes {
			id
			displayName
			maxDataSize
			pricePerMonth
		}
	}
}
`,
	}
	var err error

	var data ListAddOnPlansResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func ProvisionAddOn(
	ctx context.Context,
	client graphql.Client,
	organizationId string,
	region string,
	planId string,
) (*ProvisionAddOnResponse, error) {
	req := &graphql.Request{
		OpName: "ProvisionAddOn",
		Query: `
mutation ProvisionAddOn ($organizationId: ID!, $region: String!, $planId: ID!) {
	provisionAddOn(input: {organizationId:$organizationId,region:$region,type:upstash_redis,planId:$planId}) {
		addOn {
			id
			publicUrl
		}
	}
}
`,
		Variables: &__ProvisionAddOnInput{
			OrganizationId: organizationId,
			Region:         region,
			PlanId:         planId,
		},
	}
	var err error

	var data ProvisionAddOnResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
