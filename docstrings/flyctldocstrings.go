package docstrings

var docstrings = map[string]KeyStrings{
	"apps": KeyStrings{"apps", "Manage apps",
		`The Apps commands focus on managing your Fly applications.
Start with the "create" command to register your application.
The "list" command will list all currently registered applications.
`,
	},
	"config": KeyStrings{"config", "Manage application configuration",
		``,
	},
	"history": KeyStrings{"history", "List app's change history",
		`List the history of changes in the application.
`,
	},
	"status": KeyStrings{"status", "Show app status",
		`Show the application's current status including application details, tasks, most recent deployment details
and in which regions it is currently allocated.
`,
	},
	"version": KeyStrings{"version", "Show flyctl version information",
		`Shows version information for the flyctl command itself, including version number and build date.
`,
	},
	"logs": KeyStrings{"logs", "View app logs",
		`View application logs as generated by the application running on the Fly platform.

Logs can be filtered to a specific instance using the instance/i flag or to all instances running in a specific
region using the region/r flag.
`,
	},
	"flyctl": KeyStrings{"flyctl", "The Fly CLI",
		`flyctl is a command line interface to the Fly.io platform.

It allows users to manage authentication, application creation, deployment, network configuration, logging and more
with just the one command.
`,
	},
	"info": KeyStrings{"info", "Show detailed app information",
		`Shows information about the application on the Fly platform

Information includes the application's
* name, owner, version, status and hostname
* services
* IP addresses
`,
	},
	"auth": KeyStrings{"auth", "Manage authentication",
		`Authenticate with Fly (and logout if you need to).

Start with the "login" subcommand.

`,
	},
	"deploy": KeyStrings{"deploy", "Deploy an application to the Fly platform",
		`Deploy an application to the Fly platform. The application can be a local image, remote image or defined in
a Dockerfile.

Use the image/i flag to specify a local or remote image to deploy.

Use the detach flag to return immediately from starting the deployment rather than monitoring the deployment progress.
`,
	},
	"ips": KeyStrings{"ips", "Manage IP addresses for apps",
		`Manage IP addresses for applications.
`,
	},
	"builds": KeyStrings{"builds", "Work with Fly Builds",
		`Fly Builds are templates to make developing Fly applications easier. The builds commands
`,
	},
	"certs": KeyStrings{"certs", "Manage certificates",
		`Manage certificates associated with a deployed application.
`,
	},
	"docs": KeyStrings{"docs", "View documentation",
		`View documentation on the Fly.io website. This command will open a browser to view the content.
`,
	},
	"releases": KeyStrings{"releases", "List app releases",
		`List all the releases of the application onto the Fly platform, including type, when, success/fail and
which user triggered the release.
`,
	},
	"secrets": KeyStrings{"secrets", "Manage app secrets",
		`Manage application secrets with the set and unset commands.

Secrets are provided to apps at runtime as ENV variables. Names are
case sensitive and stored as-is, so ensure names are appropriate for
the application and vm environment.
`,
	},
}
